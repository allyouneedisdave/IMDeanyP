@model PagedList.IPagedList<IMDeanyP.Models.Film>
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">
    $(document).ready(function () {
        //find the control with the name searchString
        //and apply autocomplete plugin
        $("[name='searchString']").autocomplete({
            //get data from Search action
            source: '@Url.Action("Search")',
            //search when min 2 characters entered
            minLength: 2,
            //when option selected
            select: function (event, ui) {
                //go to the Details action and append the id
                //from the JSON results
                window.location = '@Url.Action("Details")'
                    + '/' + ui.item.id
            }
        });
    })
</script>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Films", FormMethod.Get))
{
    <p>
        Find by title: @Html.TextBox("searchString",
                      ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Film Title", "Index",
           new { sortOrder = ViewBag.TitleSortParam,
           currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().FilmGenre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().FilmDesc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().FilmReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().FilmImage)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FilmTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FilmGenre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FilmDescTrimmed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FilmReleaseDate)
            </td>
            <td>
                @if (item.FilmImage != null)
                {
                    <img src="@Url.Content(item.FilmImage)" width="100" />
                }
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.FilmID }) |
                @Html.ActionLink("Details", "Details", new { id = item.FilmID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.FilmID })
            </td>
        </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ?
        0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new {  page, sortOrder = ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter }))
